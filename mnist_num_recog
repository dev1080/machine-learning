import tensorflow as tf

mnist = tf.keras.datasets.mnist

(x_train, y_train), (x_test, y_test) = mnist.load_data() #Iamge of 28*28

x_train = tf.keras.utils.normalize(x_train, axis=1)
x_test = tf.keras.utils.normalize(x_test, axis=1)


model = Sequential()
model.add(Flatten())
model.add(Dense(128, activation = tf.nn.relu))
model.add(Dense(128, activation = tf.nn.relu))
model.add(Dense(10, activation = tf.nn.softmax))

model.compile(optimizer = 'adam',
             loss = 'sparse_categorical_crossentropy',
             metrics=['accuracy'])

model.fit(x_train, y_train, epochs=3)


val_loss, val_acc = model.evaluate(x_test, y_test)
print(val_loss, val_acc)


model.save('epic_num_reader.model')
new_model = tf.keras.models.load_model('epic_num_reader.model')
predictions = new_model.predict([x_test])
print(predictions[2])

import numpy as np
print(np.argmax(predictions[2]))

plt.imshow(x_test[2])
plt.show()
